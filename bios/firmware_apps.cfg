MEMORY
{
    RAM: start=$0000, size=$C000, type=rw, define=yes, file=%O;
}

FILES {
    %O: format = o65;
}

FEATURES
{
    CONDES: segment = RODATA,
            type = interruptor,
            label = __IRQ_TABLE__,
            order = decreasing;
}

FORMATS
{
    o65: os     = 78,
         import = sys_exit,
         import = sys_malloc,
         import = sys_free
         import = io_put_hex,
         import = io_cb_put_char,
         import = io_put_char,
         import = io_put_const_string,
         import = lcd_put_const_string,
         import = lcd_put_hex,
         import = lcd_put_char,
         export = __IRQ_TABLE__
         export = main;
}

SEGMENTS
{
    ZEROPAGE:   load=RAM, type=zp,  start=$0000, define=yes, optional=yes;
    STACK:      load=RAM, type=bss, start=$0100, define=yes, optional=yes;
    CODE:       load=RAM, type=ro,  start=$0200, define=yes;
    RODATA:     load=RAM, type=ro,               define=yes, optional=yes;
    DATA:       load=RAM, type=rw,               define=yes, optional=yes;
    BSS:        load=RAM, type=bss,              define=yes, optional=yes;
}

SYMBOLS
{
    VIA_IO_B:  type = export, value = $C000; # input/output register 'B'
    VIA_IO_A:  type = export, value = $C001; # input/output register 'A'
    VIA_DIR_B: type = export, value = $C002; # data direction register 'B'
    VIA_DIR_A: type = export, value = $C003; # data direction register 'A'
    VIA_T1CL:  type = export, value = $C004; # (r) T1 low-order latches / (w) T1 low-order counter
    VIA_T1CH:  type = export, value = $C005; # (r) T1 high-order latches / (w) T1 high-order counter 
    VIA_T1LL:  type = export, value = $C006;
    VIA_T1LH:  type = export, value = $C007;
    VIA_T2CL:  type = export, value = $C008;
    VIA_T2CH:  type = export, value = $C009;
    VIA_SR:    type = export, value = $C00A; # shift register
    VIA_ACR:   type = export, value = $C00B;
    VIA_PCR:   type = export, value = $C00C; # Peripheral Control Register
    VIA_IFR:   type = export, value = $C00D; # Interrupt Flags Register
    VIA_IER:   type = export, value = $C00E; # Interrupt Enable Register

    VIA_LED_RED:   type=export, addrsize=zp, value = $20;
    VIA_LED_GREEN: type=export, addrsize=zp, value = $80;

    IRQ_CTRL: type=export, value = $C100;

    LCD_INSTR: type=export, value = $C300;
    LCD_DATA:  type=export, value = $C301;

    ACIA_DATA:   type=export, value = $C200;
    ACIA_STATUS: type=export, value = $C201;
    ACIA_CMD:    type=export, value = $C202;
    ACIA_CTRL:   type=export, value = $C203;
}
